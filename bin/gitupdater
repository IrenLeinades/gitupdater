#!/usr/bin/env node

const { execSync } = require('child_process');
const inquirer = require('inquirer');
const fs = require('fs');
const path = require('path');
const os = require('os');

async function main() {
    // Get credentials
    const credentials = await inquirer.prompt([
        {
            type: 'input',
            name: 'username',
            message: 'Enter your Git username:',
            validate: input => input.length > 0
        },
        {
            type: 'password',
            name: 'token',
            message: 'Enter your Git token:',
            validate: input => input.length > 0
        }
    ]);

    // Create temporary credentials file
    const credentialsFile = path.join(os.tmpdir(), 'git-credentials-' + Date.now());
    fs.writeFileSync(credentialsFile, `https://${credentials.username}:${credentials.token}@github.com`);

    try {
        // Get current directory
        const currentDir = process.cwd();
        console.log(`Searching for Git repositories in: ${currentDir}`);
        console.log('This may take a moment...');

        // Find all .git directories
        const findCommand = process.platform === 'win32' 
            ? 'dir /s /b /ad .git' 
            : 'find . -type d -name ".git"';
        
        const gitDirs = execSync(findCommand, { cwd: currentDir })
            .toString()
            .split('\n')
            .filter(dir => dir.trim());

        if (gitDirs.length === 0) {
            console.log('No Git repositories found in the current directory or its subdirectories.');
            return;
        }

        // Update each repository
        for (const gitDir of gitDirs) {
            const repoPath = path.dirname(gitDir);
            console.log(`\nUpdating repository: ${repoPath}`);

            try {
                // Configure git to use credentials
                execSync('git config --local credential.helper store', { cwd: repoPath });
                fs.copyFileSync(credentialsFile, path.join(os.homedir(), '.git-credentials'));

                // Pull changes
                execSync('git pull', { cwd: repoPath });
                console.log('✅ Successfully updated');
            } catch (error) {
                console.log('❌ Failed to update');
                console.error(error.message);
            } finally {
                // Clean up credentials
                try {
                    fs.unlinkSync(path.join(os.homedir(), '.git-credentials'));
                } catch (e) {
                    // Ignore cleanup errors
                }
            }
        }

        console.log('\nAll repositories have been processed!');
    } finally {
        // Clean up temporary credentials file
        try {
            fs.unlinkSync(credentialsFile);
        } catch (e) {
            // Ignore cleanup errors
        }
    }

    // Pause on Windows
    if (process.platform === 'win32') {
        console.log('\nPress Enter to exit...');
        await inquirer.prompt([{
            type: 'input',
            name: 'continue',
            message: ''
        }]);
    }
}

main().catch(error => {
    console.error('An error occurred:', error);
    process.exit(1);
}); 